<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://abhi1kush.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://abhi1kush.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-04-02T11:04:12+00:00</updated><id>https://abhi1kush.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">first demo post</title><link href="https://abhi1kush.github.io/blog/2024/first/" rel="alternate" type="text/html" title="first demo post"/><published>2024-04-01T21:01:00+00:00</published><updated>2024-04-01T21:01:00+00:00</updated><id>https://abhi1kush.github.io/blog/2024/first</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/first/"><![CDATA[<p>This is an example post with image galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all. </div> <p>Images can be made zoomable. Simply add <code class="language-plaintext highlighter-rouge">data-zoomable</code> to <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tags that you want to make zoomable.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The rest of the images in this post are all zoomable, arranged into different mini-galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/11-480.webp 480w,/assets/img/11-800.webp 800w,/assets/img/11-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/11.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is a demo post.]]></summary></entry><entry><title type="html">Golang DataStructure Cheat-Sheet</title><link href="https://abhi1kush.github.io/blog/2024/golang-datastructure-cheat-sheet/" rel="alternate" type="text/html" title="Golang DataStructure Cheat-Sheet"/><published>2024-03-21T07:28:47+00:00</published><updated>2024-03-21T07:28:47+00:00</updated><id>https://abhi1kush.github.io/blog/2024/golang-datastructure-cheat-sheet</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/golang-datastructure-cheat-sheet/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">DSA Preparation Crash Course</title><link href="https://abhi1kush.github.io/blog/2024/dsa-preparation-crash-course/" rel="alternate" type="text/html" title="DSA Preparation Crash Course"/><published>2024-03-20T07:43:34+00:00</published><updated>2024-03-20T07:43:34+00:00</updated><id>https://abhi1kush.github.io/blog/2024/dsa-preparation-crash-course</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/dsa-preparation-crash-course/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">System Design Resources</title><link href="https://abhi1kush.github.io/blog/2024/system-design-resources/" rel="alternate" type="text/html" title="System Design Resources"/><published>2024-03-19T08:53:10+00:00</published><updated>2024-03-19T08:53:10+00:00</updated><id>https://abhi1kush.github.io/blog/2024/system-design-resources</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/system-design-resources/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Tree Based Interview Questions : Golang</title><link href="https://abhi1kush.github.io/blog/2024/tree-based-interview-questions-golang/" rel="alternate" type="text/html" title="Tree Based Interview Questions : Golang"/><published>2024-03-08T20:45:49+00:00</published><updated>2024-03-08T20:45:49+00:00</updated><id>https://abhi1kush.github.io/blog/2024/tree-based-interview-questions-golang</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/tree-based-interview-questions-golang/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Dijkastra Algorithm in Golang using container/heap.</title><link href="https://abhi1kush.github.io/blog/2024/dijkastra-algorithm-in-golang-using-containerheap/" rel="alternate" type="text/html" title="Dijkastra Algorithm in Golang using container/heap."/><published>2024-03-08T04:03:31+00:00</published><updated>2024-03-08T04:03:31+00:00</updated><id>https://abhi1kush.github.io/blog/2024/dijkastra-algorithm-in-golang-using-containerheap</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/dijkastra-algorithm-in-golang-using-containerheap/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Precise Square Root using Newton Raphson Method.</title><link href="https://abhi1kush.github.io/blog/2024/precise-square-root-using-newton-raphson-method/" rel="alternate" type="text/html" title="Precise Square Root using Newton Raphson Method."/><published>2024-01-29T17:07:46+00:00</published><updated>2024-01-29T17:07:46+00:00</updated><id>https://abhi1kush.github.io/blog/2024/precise-square-root-using-newton-raphson-method</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/precise-square-root-using-newton-raphson-method/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Trie : Data Structure</title><link href="https://abhi1kush.github.io/blog/2024/trie-data-structure/" rel="alternate" type="text/html" title="Trie : Data Structure"/><published>2024-01-29T16:04:38+00:00</published><updated>2024-01-29T16:04:38+00:00</updated><id>https://abhi1kush.github.io/blog/2024/trie-data-structure</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/trie-data-structure/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">container_of() macro and list_entry() Explained. (System Programming in C)</title><link href="https://abhi1kush.github.io/blog/2024/container_of-macro-and-list_entry-explained-system-programming-in-c/" rel="alternate" type="text/html" title="container_of() macro and list_entry() Explained. (System Programming in C)"/><published>2024-01-29T14:33:56+00:00</published><updated>2024-01-29T14:33:56+00:00</updated><id>https://abhi1kush.github.io/blog/2024/container_of-macro-and-list_entry-explained-system-programming-in-c</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/container_of-macro-and-list_entry-explained-system-programming-in-c/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Red Black Tree Vs AVL Tree</title><link href="https://abhi1kush.github.io/blog/2024/red-black-tree-vs-avl-tree/" rel="alternate" type="text/html" title="Red Black Tree Vs AVL Tree"/><published>2024-01-29T13:58:11+00:00</published><updated>2024-01-29T13:58:11+00:00</updated><id>https://abhi1kush.github.io/blog/2024/red-black-tree-vs-avl-tree</id><content type="html" xml:base="https://abhi1kush.github.io/blog/2024/red-black-tree-vs-avl-tree/"><![CDATA[]]></content><author><name></name></author></entry></feed>